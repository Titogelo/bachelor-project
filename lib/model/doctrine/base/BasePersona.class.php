<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Persona', 'doctrine');

/**
 * BasePersona
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idpersona
 * @property string $nombre
 * @property string $apellidos
 * @property integer $edad
 * @property string $nif
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property string $foto
 * @property integer $idclub
 * @property Club $Club
 * @property Doctrine_Collection $Directivo
 * @property Doctrine_Collection $Entrenador
 * @property Doctrine_Collection $Jugador
 * @property Doctrine_Collection $SfGuardUserProfile
 * @property Doctrine_Collection $Usuario
 * 
 * @method integer             getIdpersona()          Returns the current record's "idpersona" value
 * @method string              getNombre()             Returns the current record's "nombre" value
 * @method string              getApellidos()          Returns the current record's "apellidos" value
 * @method integer             getEdad()               Returns the current record's "edad" value
 * @method string              getNif()                Returns the current record's "nif" value
 * @method timestamp           getCreatedAt()          Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()          Returns the current record's "updated_at" value
 * @method string              getFoto()               Returns the current record's "foto" value
 * @method integer             getIdclub()             Returns the current record's "idclub" value
 * @method Club                getClub()               Returns the current record's "Club" value
 * @method Doctrine_Collection getDirectivo()          Returns the current record's "Directivo" collection
 * @method Doctrine_Collection getEntrenador()         Returns the current record's "Entrenador" collection
 * @method Doctrine_Collection getJugador()            Returns the current record's "Jugador" collection
 * @method Doctrine_Collection getSfGuardUserProfile() Returns the current record's "SfGuardUserProfile" collection
 * @method Doctrine_Collection getUsuario()            Returns the current record's "Usuario" collection
 * @method Persona             setIdpersona()          Sets the current record's "idpersona" value
 * @method Persona             setNombre()             Sets the current record's "nombre" value
 * @method Persona             setApellidos()          Sets the current record's "apellidos" value
 * @method Persona             setEdad()               Sets the current record's "edad" value
 * @method Persona             setNif()                Sets the current record's "nif" value
 * @method Persona             setCreatedAt()          Sets the current record's "created_at" value
 * @method Persona             setUpdatedAt()          Sets the current record's "updated_at" value
 * @method Persona             setFoto()               Sets the current record's "foto" value
 * @method Persona             setIdclub()             Sets the current record's "idclub" value
 * @method Persona             setClub()               Sets the current record's "Club" value
 * @method Persona             setDirectivo()          Sets the current record's "Directivo" collection
 * @method Persona             setEntrenador()         Sets the current record's "Entrenador" collection
 * @method Persona             setJugador()            Sets the current record's "Jugador" collection
 * @method Persona             setSfGuardUserProfile() Sets the current record's "SfGuardUserProfile" collection
 * @method Persona             setUsuario()            Sets the current record's "Usuario" collection
 * 
 * @package    proy
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePersona extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('persona');
        $this->hasColumn('idpersona', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('apellidos', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('edad', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('nif', 'string', 9, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 9,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('foto', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('idclub', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Club', array(
             'local' => 'idclub',
             'foreign' => 'idclub'));

        $this->hasMany('Directivo', array(
             'local' => 'idpersona',
             'foreign' => 'idpersona'));

        $this->hasMany('Entrenador', array(
             'local' => 'idpersona',
             'foreign' => 'idpersona'));

        $this->hasMany('Jugador', array(
             'local' => 'idpersona',
             'foreign' => 'idpersona'));

        $this->hasMany('SfGuardUserProfile', array(
             'local' => 'idpersona',
             'foreign' => 'idpersona'));

        $this->hasMany('Usuario', array(
             'local' => 'idpersona',
             'foreign' => 'idpersona'));
    }
}