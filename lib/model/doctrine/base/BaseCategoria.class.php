<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Categoria', 'doctrine');

/**
 * BaseCategoria
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $nombre
 * @property integer $idtemporada
 * @property integer $idcategoria
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Temporada $Temporada
 * @property Doctrine_Collection $Clasificacion
 * @property Doctrine_Collection $Partido
 * 
 * @method string              getNombre()        Returns the current record's "nombre" value
 * @method integer             getIdtemporada()   Returns the current record's "idtemporada" value
 * @method integer             getIdcategoria()   Returns the current record's "idcategoria" value
 * @method timestamp           getCreatedAt()     Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()     Returns the current record's "updated_at" value
 * @method Temporada           getTemporada()     Returns the current record's "Temporada" value
 * @method Doctrine_Collection getClasificacion() Returns the current record's "Clasificacion" collection
 * @method Doctrine_Collection getPartido()       Returns the current record's "Partido" collection
 * @method Categoria           setNombre()        Sets the current record's "nombre" value
 * @method Categoria           setIdtemporada()   Sets the current record's "idtemporada" value
 * @method Categoria           setIdcategoria()   Sets the current record's "idcategoria" value
 * @method Categoria           setCreatedAt()     Sets the current record's "created_at" value
 * @method Categoria           setUpdatedAt()     Sets the current record's "updated_at" value
 * @method Categoria           setTemporada()     Sets the current record's "Temporada" value
 * @method Categoria           setClasificacion() Sets the current record's "Clasificacion" collection
 * @method Categoria           setPartido()       Sets the current record's "Partido" collection
 * 
 * @package    proy
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCategoria extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('categoria');
        $this->hasColumn('nombre', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('idtemporada', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('idcategoria', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Temporada', array(
             'local' => 'idtemporada',
             'foreign' => 'idtemporada'));

        $this->hasMany('Clasificacion', array(
             'local' => 'idcategoria',
             'foreign' => 'idcategoria'));

        $this->hasMany('Partido', array(
             'local' => 'idcategoria',
             'foreign' => 'idcategoria'));
    }
}