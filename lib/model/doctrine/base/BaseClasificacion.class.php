<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Clasificacion', 'doctrine');

/**
 * BaseClasificacion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idequipo
 * @property integer $idjornada
 * @property integer $posicion
 * @property integer $puntos
 * @property integer $favor
 * @property integer $contra
 * @property integer $idcategoria
 * @property integer $idclasificacion
 * @property integer $jugados
 * @property integer $ganados
 * @property integer $empatados
 * @property integer $perdidos
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Categoria $Categoria
 * @property Equipo $Equipo
 * @property Jornada $Jornada
 * 
 * @method integer       getIdequipo()        Returns the current record's "idequipo" value
 * @method integer       getIdjornada()       Returns the current record's "idjornada" value
 * @method integer       getPosicion()        Returns the current record's "posicion" value
 * @method integer       getPuntos()          Returns the current record's "puntos" value
 * @method integer       getFavor()           Returns the current record's "favor" value
 * @method integer       getContra()          Returns the current record's "contra" value
 * @method integer       getIdcategoria()     Returns the current record's "idcategoria" value
 * @method integer       getIdclasificacion() Returns the current record's "idclasificacion" value
 * @method integer       getJugados()         Returns the current record's "jugados" value
 * @method integer       getGanados()         Returns the current record's "ganados" value
 * @method integer       getEmpatados()       Returns the current record's "empatados" value
 * @method integer       getPerdidos()        Returns the current record's "perdidos" value
 * @method timestamp     getCreatedAt()       Returns the current record's "created_at" value
 * @method timestamp     getUpdatedAt()       Returns the current record's "updated_at" value
 * @method Categoria     getCategoria()       Returns the current record's "Categoria" value
 * @method Equipo        getEquipo()          Returns the current record's "Equipo" value
 * @method Jornada       getJornada()         Returns the current record's "Jornada" value
 * @method Clasificacion setIdequipo()        Sets the current record's "idequipo" value
 * @method Clasificacion setIdjornada()       Sets the current record's "idjornada" value
 * @method Clasificacion setPosicion()        Sets the current record's "posicion" value
 * @method Clasificacion setPuntos()          Sets the current record's "puntos" value
 * @method Clasificacion setFavor()           Sets the current record's "favor" value
 * @method Clasificacion setContra()          Sets the current record's "contra" value
 * @method Clasificacion setIdcategoria()     Sets the current record's "idcategoria" value
 * @method Clasificacion setIdclasificacion() Sets the current record's "idclasificacion" value
 * @method Clasificacion setJugados()         Sets the current record's "jugados" value
 * @method Clasificacion setGanados()         Sets the current record's "ganados" value
 * @method Clasificacion setEmpatados()       Sets the current record's "empatados" value
 * @method Clasificacion setPerdidos()        Sets the current record's "perdidos" value
 * @method Clasificacion setCreatedAt()       Sets the current record's "created_at" value
 * @method Clasificacion setUpdatedAt()       Sets the current record's "updated_at" value
 * @method Clasificacion setCategoria()       Sets the current record's "Categoria" value
 * @method Clasificacion setEquipo()          Sets the current record's "Equipo" value
 * @method Clasificacion setJornada()         Sets the current record's "Jornada" value
 * 
 * @package    proy
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClasificacion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('clasificacion');
        $this->hasColumn('idequipo', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('idjornada', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('posicion', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('puntos', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('favor', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('contra', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('idcategoria', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('idclasificacion', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('jugados', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ganados', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('empatados', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('perdidos', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Categoria', array(
             'local' => 'idcategoria',
             'foreign' => 'idcategoria'));

        $this->hasOne('Equipo', array(
             'local' => 'idequipo',
             'foreign' => 'idequipo'));

        $this->hasOne('Jornada', array(
             'local' => 'idjornada',
             'foreign' => 'idjornada'));
    }
}